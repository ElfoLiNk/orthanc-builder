name: build and release

on:
  push:
    branches: 
      - '*'
    tags:
      - '*'

  pull_request:
    branches: [ master ]

jobs:
  pre-build:
    name: pre-build
    runs-on: "ubuntu-latest"
    outputs:
      current_branch_tag: ${{steps.branch-name.outputs.current_branch}}
      is_tag: ${{steps.branch-name.outputs.is_tag}}
    steps:
      - name: Get branch/tag name
        id: branch-name
        uses: tj-actions/branch-names@v5.1
        # output: steps.branch-name.outputs.current_branch contains the branch or the tag

  build:
    name: build
    runs-on: "ubuntu-latest"

    steps:
    
    - uses: actions/checkout@v2

    - name: Check disk space
      run: sudo df -h

    # # In this step, this action saves a list of existing images,
    # # the cache is created without them in the post run.
    # # It also restores the cache if it exists.
    # - uses: satackey/action-docker-layer-caching@v0.0.11
    #   # Ignore the failure of a step and avoid terminating the job.
    #   continue-on-error: true
    
    # - name: Check disk space
    #   run: sudo df -h

    # - name: Free disk space
    #   run:  ./free-disk-space-azure-builder.sh

    # - name: Check disk space
    #   run: sudo df -h
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        config: .github/buildkitd.toml

    - name: Build the osimis/orthanc Docker image
      # run: docker build --progress=plain -t osimis/orthanc:current -f docker/orthanc/Dockerfile docker/orthanc/
      uses: docker/build-push-action@v2
      with:
        context: docker/orthanc/
        push: false
        tags: osimis/orthanc:current
        cache-from: type=gha,scope=osimis-orthanc
        cache-to: type=gha,scope=osimis-orthanc
        target: build-orthanc

    - name: Tag with current commit ref
      run: docker tag osimis/orthanc:current osimis/orthanc:${{needs.pre-build.outputs.current_branch_tag}}

    # - name: Login to DockerHub
    #   uses: docker/login-action@v1
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}
